import {
  PinionContext,
  prompt,
  renderTemplate,
  toFile
} from '@featherscloud/pinion'

// Setup the Context to receive user input
interface Context extends PinionContext {
  name: string
  description: string
  docsPath: string
}

// The template uses Context variables.
const docs = ({ name, description }: Context) => {
  return `# ${name}

> ${description}

This is a readme generated by Pinion

Copyright (c) ${new Date().getFullYear()}
`
}

export const generate = (init: Context) => {
  return Promise.resolve(init)
    .then(
      prompt({
        name: {
          type: 'input',
          message: 'What is the name of your app?'
        },
        description: {
          type: 'input',
          message: 'Write a short description'
        },
        docsPath: {
          type: 'input',
          default: 'docs',
          message: 'Where should the documentation live?'
        }
      })
    )
    // Render the template
    .then(
      renderTemplate(
        docs,
        toFile(context => [context.docsPath, 'docs.md'])
      )
    )
}