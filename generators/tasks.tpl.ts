import { PinionContext, prompt, renderTemplate, toFile } from '@featherscloud/pinion'

interface Context extends PinionContext {
  message: string
  name: string
  description: string
}

const tasks = ({ name, description }: Context) =>
  `# ${name}
  
  > ${description}
  
  This is a readme generated by Pinion
  
  Copyright (c) ${new Date().getFullYear()}
  `

export const generate = (init: Context) => Promise.resolve(init)
    .then((context) => {
      // Returning a new object instead of modifying the existing object avoids
      // unintended side effects
      return {
        ...context,
        message: 'Updated context from task 1'
      }
    })
    .then(async (context) => {
      context.pinion.logger.log(
        `This is task 2 and context.message is: "${context.message}"`
      )

      return context
    })
    .then(
      prompt({
        name: {
          type: 'input',
          message: 'What is the name of your app?'
        },
        description: {
          type: 'input',
          message: 'Write a short description'
        }
      })
    )
    .then(async (context) => {
      context.pinion.logger.log(
        `Got name "${context.name}" and description "${context.description}"`
      )
      return context
    })
    // Render the template
    .then(renderTemplate(tasks, toFile('tasks.md')))